server:
 port: 0
eureka:
 client:
  registerWithEureka: true
  fetchRegistry: true
  serviceUrl:
   defaultZone: http://localhost:8070/eureka/
spring:
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: edge-service
            client-secret: myapp-keycloak-secret
            scope: openid
        provider:
          keycloak:
            issuer-uri: http://localhost:8090/auth/realms/MyProductshop

  cloud:
    
    gateway:
      httpclient:
        connect-timeout: 5000 # 5s
        response-timeout: 5s
        pool:
          type: elastic
          max-idle-time: 15s
          max-life-time: 60s
      default-filters:
       
        - name: Retry
          args:
            retries: 3
            methods: GET
            series: SERVER_ERROR
            exceptions: java.io.IOException, java.util.concurrent.TimeoutException
            backoff:
              firstBackoff: 50ms
              maxBackOff: 500ms  # firstBackoff * (factor ^ n)
              factor: 2
              basedOnPreviousValue: false
          
      
        
      routes:
        - id: catalog-route
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/products/**
          filters:
           - name: CircuitBreaker
             args:
              name: catalogCircuitBreaker
              fallbackUri: forward:/catalog-fallback
          
        - id: order-route
          uri: lb://ORDER-SERVICE-ASYNC
          predicates:
            - Path=/orders/**
          filters:
           - name: CircuitBreaker
             args:
              name: orderCircuitBreaker
      
resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 20
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 15000
  timelimiter:
    configs:
      default:
        timeoutDuration: 5s      
              
              
          
   
   
   
   
